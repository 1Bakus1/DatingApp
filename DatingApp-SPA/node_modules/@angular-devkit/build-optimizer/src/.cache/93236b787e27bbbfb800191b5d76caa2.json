{"remainingRequest":"E:\\Bakun\\ProjektASPNET\\Projekt1\\DatingApp\\DatingApp-SPA\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!E:\\Bakun\\ProjektASPNET\\Projekt1\\DatingApp\\DatingApp-SPA\\node_modules\\ngx-bootstrap\\chronos\\i18n\\sl.js","dependencies":[{"path":"E:\\Bakun\\ProjektASPNET\\Projekt1\\DatingApp\\DatingApp-SPA\\node_modules\\ngx-bootstrap\\chronos\\i18n\\sl.js","mtime":1563772958661},{"path":"E:\\Bakun\\ProjektASPNET\\Projekt1\\DatingApp\\DatingApp-SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Bakun\\ProjektASPNET\\Projekt1\\DatingApp\\DatingApp-SPA\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["// tslint:disable:comment-format binary-expression-operand-order max-line-length\r\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\r\n// tslint:disable:no-shadowed-variable switch-default prefer-const\r\n// tslint:disable:one-variable-per-declaration newline-before-return\r\n// tslint:disable:object-literal-key-quotes\r\nimport { getDayOfWeek } from '../units/day-of-week';\r\n//! moment.js locale configuration\r\n//! locale : Slovenian [sl]\r\n//! author : mihan : https://github.com/mihan\r\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\r\n    var result = number + ' ';\r\n    switch (key) {\r\n        case 's':\r\n            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\r\n        case 'ss':\r\n            if (number === 1) {\r\n                result += withoutSuffix ? 'sekundo' : 'sekundi';\r\n            }\r\n            else if (number === 2) {\r\n                result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\r\n            }\r\n            else if (number < 5) {\r\n                result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\r\n            }\r\n            else {\r\n                result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\r\n            }\r\n            return result;\r\n        case 'm':\r\n            return withoutSuffix ? 'ena minuta' : 'eno minuto';\r\n        case 'mm':\r\n            if (number === 1) {\r\n                result += withoutSuffix ? 'minuta' : 'minuto';\r\n            }\r\n            else if (number === 2) {\r\n                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\r\n            }\r\n            else if (number < 5) {\r\n                result += withoutSuffix || isFuture ? 'minute' : 'minutami';\r\n            }\r\n            else {\r\n                result += withoutSuffix || isFuture ? 'minut' : 'minutami';\r\n            }\r\n            return result;\r\n        case 'h':\r\n            return withoutSuffix ? 'ena ura' : 'eno uro';\r\n        case 'hh':\r\n            if (number === 1) {\r\n                result += withoutSuffix ? 'ura' : 'uro';\r\n            }\r\n            else if (number === 2) {\r\n                result += withoutSuffix || isFuture ? 'uri' : 'urama';\r\n            }\r\n            else if (number < 5) {\r\n                result += withoutSuffix || isFuture ? 'ure' : 'urami';\r\n            }\r\n            else {\r\n                result += withoutSuffix || isFuture ? 'ur' : 'urami';\r\n            }\r\n            return result;\r\n        case 'd':\r\n            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\r\n        case 'dd':\r\n            if (number === 1) {\r\n                result += withoutSuffix || isFuture ? 'dan' : 'dnem';\r\n            }\r\n            else if (number === 2) {\r\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\r\n            }\r\n            else {\r\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\r\n            }\r\n            return result;\r\n        case 'M':\r\n            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\r\n        case 'MM':\r\n            if (number === 1) {\r\n                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\r\n            }\r\n            else if (number === 2) {\r\n                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\r\n            }\r\n            else if (number < 5) {\r\n                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\r\n            }\r\n            else {\r\n                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\r\n            }\r\n            return result;\r\n        case 'y':\r\n            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\r\n        case 'yy':\r\n            if (number === 1) {\r\n                result += withoutSuffix || isFuture ? 'leto' : 'letom';\r\n            }\r\n            else if (number === 2) {\r\n                result += withoutSuffix || isFuture ? 'leti' : 'letoma';\r\n            }\r\n            else if (number < 5) {\r\n                result += withoutSuffix || isFuture ? 'leta' : 'leti';\r\n            }\r\n            else {\r\n                result += withoutSuffix || isFuture ? 'let' : 'leti';\r\n            }\r\n            return result;\r\n    }\r\n}\r\nexport var slLocale = {\r\n    abbr: 'sl',\r\n    months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\r\n    monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\r\n    monthsParseExact: true,\r\n    weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\r\n    weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\r\n    weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\r\n    weekdaysParseExact: true,\r\n    longDateFormat: {\r\n        LT: 'H:mm',\r\n        LTS: 'H:mm:ss',\r\n        L: 'DD.MM.YYYY',\r\n        LL: 'D. MMMM YYYY',\r\n        LLL: 'D. MMMM YYYY H:mm',\r\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\r\n    },\r\n    calendar: {\r\n        sameDay: '[danes ob] LT',\r\n        nextDay: '[jutri ob] LT',\r\n        nextWeek: function (date) {\r\n            switch (getDayOfWeek(date)) {\r\n                case 0:\r\n                    return '[v] [nedeljo] [ob] LT';\r\n                case 3:\r\n                    return '[v] [sredo] [ob] LT';\r\n                case 6:\r\n                    return '[v] [soboto] [ob] LT';\r\n                case 1:\r\n                case 2:\r\n                case 4:\r\n                case 5:\r\n                    return '[v] dddd [ob] LT';\r\n            }\r\n        },\r\n        lastDay: '[včeraj ob] LT',\r\n        lastWeek: function (date) {\r\n            switch (getDayOfWeek(date)) {\r\n                case 0:\r\n                    return '[prejšnjo] [nedeljo] [ob] LT';\r\n                case 3:\r\n                    return '[prejšnjo] [sredo] [ob] LT';\r\n                case 6:\r\n                    return '[prejšnjo] [soboto] [ob] LT';\r\n                case 1:\r\n                case 2:\r\n                case 4:\r\n                case 5:\r\n                    return '[prejšnji] dddd [ob] LT';\r\n            }\r\n        },\r\n        sameElse: 'L'\r\n    },\r\n    relativeTime: {\r\n        future: 'čez %s',\r\n        past: 'pred %s',\r\n        s: processRelativeTime,\r\n        ss: processRelativeTime,\r\n        m: processRelativeTime,\r\n        mm: processRelativeTime,\r\n        h: processRelativeTime,\r\n        hh: processRelativeTime,\r\n        d: processRelativeTime,\r\n        dd: processRelativeTime,\r\n        M: processRelativeTime,\r\n        MM: processRelativeTime,\r\n        y: processRelativeTime,\r\n        yy: processRelativeTime\r\n    },\r\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n    ordinal: '%d.',\r\n    week: {\r\n        dow: 1,\r\n        // Monday is the first day of the week.\r\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\r\n    }\r\n};\r\n//# sourceMappingURL=sl.js.map",null]}