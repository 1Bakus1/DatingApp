{"remainingRequest":"E:\\Bakun\\ProjektASPNET\\Projekt1\\DatingApp\\DatingApp-SPA\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!E:\\Bakun\\ProjektASPNET\\Projekt1\\DatingApp\\DatingApp-SPA\\node_modules\\ngx-bootstrap\\chronos\\create\\from-object.js","dependencies":[{"path":"E:\\Bakun\\ProjektASPNET\\Projekt1\\DatingApp\\DatingApp-SPA\\node_modules\\ngx-bootstrap\\chronos\\create\\from-object.js","mtime":1563772958549},{"path":"E:\\Bakun\\ProjektASPNET\\Projekt1\\DatingApp\\DatingApp-SPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Bakun\\ProjektASPNET\\Projekt1\\DatingApp\\DatingApp-SPA\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { normalizeObjectUnits } from '../units/aliases';\r\nimport { configFromArray } from './from-array';\r\nimport { isObject, isString } from '../utils/type-checks';\r\nexport function configFromObject(config) {\r\n    if (config._d) {\r\n        return config;\r\n    }\r\n    var input = config._i;\r\n    if (isObject(input)) {\r\n        var i = normalizeObjectUnits(input);\r\n        config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\r\n            .map(function (obj) { return isString(obj) ? parseInt(obj, 10) : obj; });\r\n    }\r\n    return configFromArray(config);\r\n}\r\n//# sourceMappingURL=from-object.js.map",null]}